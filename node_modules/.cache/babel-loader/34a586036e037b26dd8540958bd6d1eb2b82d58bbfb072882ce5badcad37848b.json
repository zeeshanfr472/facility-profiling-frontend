{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with the correct backend URL\nconst API = axios.create({\n  // Update this URL to your actual deployed backend API URL\n  baseURL: 'https://facilityprofilingupdated.onrender.com',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Add timeout and improve error handling\n  timeout: 10000,\n  withCredentials: false // Set this to true only if your API requires credentials\n});\n\n// Add a request interceptor to add the auth token to requests\nAPI.interceptors.request.use(config => {\n  console.log(`Sending ${config.method.toUpperCase()} request to: ${config.url}`);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor for better error logging\nAPI.interceptors.response.use(response => {\n  console.log(`Received successful response from: ${response.config.url}`);\n  return response;\n}, error => {\n  console.error('Response error:', error);\n\n  // Improve error message for network errors\n  if (error.message === 'Network Error') {\n    console.error('Network error - check if the API is accessible and CORS is configured properly');\n  }\n\n  // Add more details to the error\n  if (error.response) {\n    console.error(`Status: ${error.response.status}`);\n    console.error('Response data:', error.response.data);\n    console.error('Response headers:', error.response.headers);\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API calls\nexport const register = async userData => {\n  console.log('Register request data:', userData);\n  try {\n    return await API.post('/register', userData);\n  } catch (error) {\n    console.error('Register error details:', error);\n    throw error;\n  }\n};\nexport const login = async formData => {\n  console.log('Login request username:', formData.username);\n  try {\n    // Convert to URLSearchParams for correct formatting\n    const formBody = new URLSearchParams();\n    formBody.append('username', formData.username);\n    formBody.append('password', formData.password);\n    return await API.post('/login', formBody, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n  } catch (error) {\n    console.error('Login error details:', error);\n    throw error;\n  }\n};\n\n// Inspection API calls\nexport const fetchInspections = () => API.get('/inspections/');\nexport const fetchInspection = id => API.get(`/inspections/${id}`);\nexport const createInspection = inspectionData => API.post('/inspections/', inspectionData);\nexport const updateInspection = (id, inspectionData) => API.put(`/inspections/${id}`, inspectionData);\nexport const deleteInspection = id => API.delete(`/inspections/${id}`);\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","timeout","withCredentials","interceptors","request","use","config","console","log","method","toUpperCase","url","token","localStorage","getItem","error","Promise","reject","response","message","status","data","register","userData","post","login","formData","username","formBody","URLSearchParams","append","password","fetchInspections","get","fetchInspection","id","createInspection","inspectionData","updateInspection","put","deleteInspection","delete"],"sources":["C:/Users/udhof/fastapi/forms/src/api/index.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with the correct backend URL\nconst API = axios.create({\n  // Update this URL to your actual deployed backend API URL\n  baseURL: 'https://facilityprofilingupdated.onrender.com',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  // Add timeout and improve error handling\n  timeout: 10000,\n  withCredentials: false // Set this to true only if your API requires credentials\n});\n\n// Add a request interceptor to add the auth token to requests\nAPI.interceptors.request.use(\n  (config) => {\n    console.log(`Sending ${config.method.toUpperCase()} request to: ${config.url}`);\n    \n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor for better error logging\nAPI.interceptors.response.use(\n  (response) => {\n    console.log(`Received successful response from: ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error);\n    \n    // Improve error message for network errors\n    if (error.message === 'Network Error') {\n      console.error('Network error - check if the API is accessible and CORS is configured properly');\n    }\n    \n    // Add more details to the error\n    if (error.response) {\n      console.error(`Status: ${error.response.status}`);\n      console.error('Response data:', error.response.data);\n      console.error('Response headers:', error.response.headers);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Authentication API calls\nexport const register = async (userData) => {\n  console.log('Register request data:', userData);\n  try {\n    return await API.post('/register', userData);\n  } catch (error) {\n    console.error('Register error details:', error);\n    throw error;\n  }\n};\n\nexport const login = async (formData) => {\n  console.log('Login request username:', formData.username);\n  try {\n    // Convert to URLSearchParams for correct formatting\n    const formBody = new URLSearchParams();\n    formBody.append('username', formData.username);\n    formBody.append('password', formData.password);\n    \n    return await API.post('/login', formBody, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n  } catch (error) {\n    console.error('Login error details:', error);\n    throw error;\n  }\n};\n\n// Inspection API calls\nexport const fetchInspections = () => API.get('/inspections/');\nexport const fetchInspection = (id) => API.get(`/inspections/${id}`);\nexport const createInspection = (inspectionData) => API.post('/inspections/', inspectionData);\nexport const updateInspection = (id, inspectionData) => API.put(`/inspections/${id}`, inspectionData);\nexport const deleteInspection = (id) => API.delete(`/inspections/${id}`);\n\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}